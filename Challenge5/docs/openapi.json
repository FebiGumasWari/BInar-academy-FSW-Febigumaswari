{
  "openapi": "3.0.3",
  "info": {
    "title": "Car Management API - FSW 1 CHALLENGE 5",
    "description": "dsd",
    "contact": {
      "email": "febigumas@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "A component for managing Users data."
    },
    {
      "name": "Cars",
      "description": "A component for managing Cars data."
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "7e51416a-f7a1-4c13-9a7e-6e5fcb8a2277"
          },
          "name": {
            "type": "string",
            "example": "febi gumas wari admin"
          },
          "email": {
            "type": "string",
            "example": "adminnew@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "admin123"
          },
          "phoneNumber": {
            "type": "string",
            "example": "0889-7700-9999"
          },
          "Address": {
            "type": "string",
            "example": "bekasi"
          },
          "Role": {
            "type": "string",
            "example": "ADMIN"
          }
          
        }
      },
      "Car": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "7e51416a-f7a1-4c13-9a7e-6e5fcb8a2277"
          },
          "name": {
            "type": "string",
            "example": "Car 1"
          },
          "type": {
            "type": "string",
            "enum": [
              "small",
              "medium",
              "large"
            ],
            "example": "small"
          },
          "image": {
            "type": "string",
            "example": "car1.jpg"
          },
          "capacity": {
            "type": "integer",
            "example": 4
          },
          "rentPerDay": {
            "type": "integer",
            "example": 50
          },
          "description": {
            "type": "string",
            "example": "A small car for daily use"
          },
          "availableAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-23T10:00:00Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-23T10:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-08T14:11:00.319Z"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "deletedBy": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register Users",
        "description": "This API is used for user registration.",
        "requestBody": {
          "description": "Request body for creating a new user.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to register User"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register/admin": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register Admin",
        "description": "This endpoint is used to register an admin.",
        "requestBody": {
          "description": "Admin registration data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Admin registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to register Admin"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User Login",
        "description": "This API is used for user login.",
        "requestBody": {
          "description": "Request body for user login.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "adminnew@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "admin123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Failed Member or Admin login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to login"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/current/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Current User",
        "description": "This API is used to retrieve the current user's information.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized login"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Retrieve a list of cars",
        "description": "This API is for retrieving a list of cars",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Car"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No data exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No data exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cars"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Create a new car",
        "description": "This API is for creating a new car.",
        "requestBody": {
          "description": "Request body for a successful car creation",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Car"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Car created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Car"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to create a car"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/{carId}": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get a specific car",
        "description": "This API is for retrieving information about a specific car based on its ID.",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "required": true,
            "description": "ID of the car to retrieve",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "7e51416a-f7a1-4c13-9a7e-6e5fcb8a2277"
          }
        ],
        "responses": {
          "200": {
            "description": "Car retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Car"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Car not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cars"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Update a specific car",
        "description": "This API is for updating information about a specific car based on its ID.",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "required": true,
            "description": "ID of the car to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "7e51416a-f7a1-4c13-9a7e-6e5fcb8a2277"
          }
        ],
        "requestBody": {
          "description": "Request body for updating a car",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Car"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Car updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Car"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update the car"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cars"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Delete a specific car",
        "description": "This API is for deleting a specific car based on its ID.",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "required": true,
            "description": "ID of the car to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "7e51416a-f7a1-4c13-9a7e-6e5fcb8a2277"
          }
        ],
        "responses": {
          "204": {
            "description": "Car deleted successfully"
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Car not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}